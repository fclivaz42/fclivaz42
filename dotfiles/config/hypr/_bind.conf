# Config for Hyprland binds

# https://wiki.hyprland.org/Configuring/Binds

$mainMod = SUPER
$bwoop = ffplay -nodisp -volume 35 /usr/share/sounds/freedesktop/stereo/bell.oga -autoexit

bind = $mainMod, space, exec, $terminal
bind = $mainMod SHIFT, space, exec, hyprctl switchxkblayout main next && notify-send -a Keyboard "$(hyprctl devices -j | jq -j '.keyboards | .[] | select(.main==true) | .active_keymap')"
bind = $mainMod, B, exec, blender
bind = $mainMod, K, exec, krita
bind = $mainMod, Q, killactive, 
bind = $mainMod, F, exec, librewolf
bind = $mainMod SHIFT, F, fullscreen,
bind = $mainMod, E, exec, $files
bind = $mainMod, V, togglefloating, 
bind = $mainMod, W, exec, pkill $menu || $menu
bind = $mainMod, P, pseudo,
bind = $mainMod, D, exec, discord
bind = $mainMod, A, togglesplit,
bind = $mainMod CTRL, A, swapsplit,
bind = $mainMod SHIFT, A, swapnext,
bind = $mainMod, G, exec, ~/bin/gamemode
bind = $mainMod SHIFT, Escape, exec, loginctl lock-session
bind = $mainMod CTRL SHIFT, Escape, exec, pkill wlogout || wlogout -c 15 -r 15
bind = $mainMod SHIFT, P, exec, hyprpicker -a -r
bind = $mainMod CTRL SHIFT, S, exec, wayshot -s --encoding png - | swappy -f -
bind = $mainMod SHIFT, S, exec, DATE="$(date '+%Y-%m-%d_%H:%M:%S')"; wayshot -s --encoding png - | magick - -quality 100 - | tee "$XDG_RUNTIME_DIR/Screenshots/Screenshot-$DATE.png" | wl-copy ; zopflipng -m -y "$XDG_RUNTIME_DIR/Screenshots/Screenshot-$DATE.png" "$HOME/Pictures/Screenshots/Screenshot-$DATE.png"
bind = $mainMod SHIFT, X, exec, ~/bin/hyprsave
bind = $mainMod SHIFT, W, exec, killall waybar ; waybar -c $HOME/.config/waybar/config.json -s $HOME/.config/waybar/style.css
bind = $mainMod SHIFT, E, exec, if [ -z "$(ls -A '$mntPoint')" ]; then mount $mntPoint && notify-send -a "Mounted" "$mntPoint" || notify-send -a "Cannot mount" "$mntPoint!"; else udisksctl unmount -b "$(cat /proc/mounts | grep $mntPoint | cut -f1 -d' ')" && notify-send -a "Unmounted" "$mntPoint." || notify-send -a "Could not unmount" "$mntPoint!"; fi
bindle = , XF86AudioRaiseVolume, exec, pamixer -i 2 && VOL="$(pamixer --get-volume)"; echo "$VOL" > $XDG_RUNTIME_DIR/volume & (( "$VOL" % 10 )) || $bwoop
bindle = , XF86AudioLowerVolume, exec, pamixer -d 2 && VOL="$(pamixer --get-volume)"; echo "$VOL" > $XDG_RUNTIME_DIR/volume & (( "$VOL" % 10 )) || $bwoop
bindle = , XF86AudioMute, exec, pamixer -t && [ $(pamixer --get-mute) == 'true' ] && VOL="Muted" || VOL="$(pamixer --get-volume)%"; notify-send --hint=string:x-dunst-stack-tag:volume -a Volume "$VOL"; [ $(pamixer --get-mute) == 'false' ] && $bwoop
bindle = , XF86MonBrightnessUp, exec, brightnessctl set 2%+ && notify-send --hint=string:x-dunst-stack-tag:brightness -a Brightness "$(awk "BEGIN {print $(brightnessctl g) / $(brightnessctl m) * 100}" | cut -f1 -d.)"
bindle = , XF86MonBrightnessDown, exec, brightnessctl set 2%- && notify-send --hint=string:x-dunst-stack-tag:brightness -a Brightness "$(awk "BEGIN {print $(brightnessctl g) / $(brightnessctl m) * 100}" | cut -f1 -d.)"

# Move focus with mainMod + arrow keys
bind = $mainMod, left, movefocus, l
bind = $mainMod, right, movefocus, r
bind = $mainMod, up, movefocus, u
bind = $mainMod, down, movefocus, d

# Switch workspaces with mainMod + [0-9]
bind = $mainMod, 1, workspace, 1
bind = $mainMod, 2, workspace, 2
bind = $mainMod, 3, workspace, 3
bind = $mainMod, 4, workspace, 4
bind = $mainMod, 5, workspace, 5
bind = $mainMod, 6, workspace, 6
bind = $mainMod, 7, workspace, 7
bind = $mainMod, 8, workspace, 8
bind = $mainMod, 9, workspace, 9
bind = $mainMod, 0, workspace, 10

# Move active window to a workspace with mainMod + SHIFT + [0-9]
bind = $mainMod CTRL, 1, movetoworkspace, 1
bind = $mainMod CTRL, 2, movetoworkspace, 2
bind = $mainMod CTRL, 3, movetoworkspace, 3
bind = $mainMod CTRL, 4, movetoworkspace, 4
bind = $mainMod CTRL, 5, movetoworkspace, 5
bind = $mainMod CTRL, 6, movetoworkspace, 6
bind = $mainMod CTRL, 7, movetoworkspace, 7
bind = $mainMod CTRL, 8, movetoworkspace, 8
bind = $mainMod CTRL, 9, movetoworkspace, 9
bind = $mainMod CTRL, 0, movetoworkspace, 10

# Example special workspace (scratchpad)
bind = $mainMod, S, togglespecialworkspace, magic
bind = $mainMod CTRL, S, movetoworkspace, special:magic

# Scroll through existing workspaces with mainMod + scroll
# bind = $mainMod, right, workspace, e+1
# bind = $mainMod, left, workspace, e-1

# Move/resize windows with mainMod + LMB/RMB and dragging
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow
bind = $mainMod, mouse_up, workspace, e+1
bind = $mainMod, mouse_down, workspace, e-1

#will switch to a submap called resize
bind = $mainMod SHIFT, R, submap,resize

# will start a submap called "resize"
submap = resize

# sets repeatable binds for resizing the active window
binde = , right, resizeactive, 10 0
binde = , left, resizeactive, -10 0
binde = , up, resizeactive, 0 -10
binde = , down, resizeactive, 0 10

# use reset to go back to the global submap
bind = $mainMod SHIFT, R, submap, reset 
bind = , escape, submap, reset 

# will reset the submap, meaning end the current one and return to the global one
submap = reset
